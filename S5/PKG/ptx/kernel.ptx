		.version        2.1
		.target         sm_10
		.entry   KERN ( .param .u32 N,	.param .align 8 .u64 vect)
		{
		.reg    .u32    max,indx;
		.reg	.u64	ptr,indx2;
		.reg    .pred   out;
		.reg    .f32    x, val, tmp;

		ld.param.u32    max, [N];	// max = N
		ld.param.u64    ptr, [vect];	// ptr = vect;
		mov.b32         indx, %tid.x;	// indx = threadIdx.x
		setp.ge.u32     out,indx,max;	// if(indx > max)
@out   		bra             END;		//		goto END:
		shl.b32         indx,indx,2;	// indx *= 4;
		cvt.u64.u32	indx2,indx;	// indx2 = (long)int
		add.u64         ptr,ptr,indx2;	// ptr += indx2;
		mov.f32         val,1.0;	// val = 1.0
		ld.global.f32   x,[ptr];	// x = *ptr
		mul.f32         tmp,x,4.0;	// tmp = 4 * x;
		add.f32         val,val,tmp;	// val += tmp
		mul.f32         x,x,x;		// x = x * x
		mul.f32         tmp,x,2.0;	// tmp = 2 * x
		add.f32         val, val, tmp;	// val += tmp
		st.global.f32   [ptr],val;	// *ptr = val
END:    	exit;				// return
		}


